Configurar un Hostname en el Archivo hosts

Puedes hacer que http://miapi.local funcione en lugar de http://localhost:8080.

 Pasos:
1Ô∏è Abrir el archivo hosts como administrador:
 Ruta: C:\Windows\System32\drivers\etc\hosts

2Ô∏è Agregar una l√≠nea al final del archivo:
127.0.0.1  miapi.local

Esto hace que miapi.local apunte a tu propia computadora.

3Ô∏è Guardar el archivo (Si no te deja, aseg√∫rate de abrirlo como administrador).

4Ô∏è Configurar IIS para usar el nuevo nombre de dominio:

Abre Administrador de IIS.
Selecciona tu aplicaci√≥n y haz clic en Enlaces (Bindings).
Agrega un nuevo enlace con:
Tipo: http
Nombre de host: miapi.local
Puerto: 8080 (o el que uses)
Guarda y reinicia el sitio.

5Ô∏è Accede a tu API con el nuevo nombre:

http://miapi.local:8080/api

---------------------------------------------------------------------------------
2. Configurar un Dominio Personalizado con DNS (En una Red o Internet)
Si quieres que la API est√© disponible desde otras computadoras en la red (o incluso en Internet), necesitas:
‚úÖ Un nombre de dominio real (ej. miapi.com)
‚úÖ Configurar DNS para apuntarlo a tu PC
‚úÖ Habilitar IIS para aceptar conexiones externas

Para redes locales, puedes usar un servidor DNS interno o configurar el hosts de cada PC.

---------------------------------------------------------------------------------

# Configurar variables
$projectPath = "D:\Desarrollo\Angular\WebAPPRestErp\WebAppRest" # Ruta de tu proyecto .NET
$publishPath = "D:\Desarrollo\Angular\WebAPPRestErp\Publish"    # Carpeta temporal de publicaci√≥n
$iisPath = "E:\Apps\Publicar\WebAppRest"                        # Carpeta donde IIS tiene la app
$siteName = "WebAppRest"                                         # Nombre del sitio en IIS

# Detener el sitio en IIS
Write-Host "üîª Deteniendo el sitio en IIS..."
iisreset /stop

# Publicar la aplicaci√≥n
Write-Host "üöÄ Publicando la aplicaci√≥n..."
dotnet publish $projectPath -c Release -o $publishPath

# Copiar archivos a IIS
Write-Host "üìÇ Copiando archivos a la carpeta de IIS..."
Remove-Item -Recurse -Force $iisPath\*  # Elimina archivos anteriores
Copy-Item -Recurse -Force $publishPath\* $iisPath

# Reiniciar el sitio en IIS
Write-Host "‚úÖ Reiniciando el sitio en IIS..."
iisreset /start

Write-Host "üéâ ¬°Despliegue completado con √©xito!"

Guarda el script como deploy.ps1.
Abre PowerShell como Administrador.
Ejecuta el script con:
Set-ExecutionPolicy Unrestricted -Scope Process
.\deploy.ps1


üîπ Explicaci√≥n
iisreset /stop ‚Üí Detiene el servidor IIS.
dotnet publish ‚Üí Publica la aplicaci√≥n en la carpeta temporal $publishPath.
Remove-Item -Recurse -Force $iisPath\* ‚Üí Elimina la versi√≥n anterior.
Copy-Item -Recurse -Force $publishPath\* $iisPath ‚Üí Copia la nueva versi√≥n a IIS.
iisreset /start ‚Üí Reinicia IIS para aplicar los cambios.


---------------------------------------------------------------------------------
Para publicar, ejecutar desde la ventana de comandos de VS2022 y desde el proyecto webapprest:
dotnet publish -c Release -o "E:\Apps\Publicar\WebAppRest"

Previamente borrar la carpeta WebAppRest de E:
